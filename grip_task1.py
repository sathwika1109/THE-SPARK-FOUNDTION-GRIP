# -*- coding: utf-8 -*-
"""GRIP TASK1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10zVM0Z1UsgHtXht0gqnTid0C7q2JH315

DATA SCIENCE & BUSINESS ANALYTICS


THE SPARKS FOUNDATION

NAME:ANALA VENKATA SATHWIKA

Prediction using Supervised ML

TASK1
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  
# %matplotlib inline

""" Importing the dataset"""

url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
df = pd.read_csv(url)
df

df.head()

"""Visualizing the dataset"""

df.plot(x='Scores', y='Hours', marker='o',color='yellow')  
plt.title('Hours vs Percentage')  
plt.xlabel('Percentage')  
plt.ylabel('Hours studied')  
plt.show()

"""Preparation of data"""

X = df.iloc[:, :-1].values  
y = df.iloc[:, 1].values

from sklearn.model_selection import train_test_split  
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""Training the Algorithm"""

from sklearn.linear_model import LinearRegression  
regressor = LinearRegression()  
regressor.fit(X_train, y_train) 

print("Training complete.")

line = regressor.coef_*X+regressor.intercept_
plt.scatter(X, y)
plt.plot(X, line,color='yellow');
plt.show()

"""Making Predictions"""

print(X_test) 
y_pred = regressor.predict(X_test)

df1 = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})  
df1

"""Testing with own data

What will be predicted score if a student studies for 9.25 hrs/ day? 
"""

hours = 9.25
own_predridiction = regressor.predict([[hours]])
print("No of Hours = {}".format(hours))
print("Predicted Score = {}".format(own_predridiction[0]))

"""Evaluating the data"""

from sklearn import metrics  
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))

